---
# NOTE: We do not support disabling bbb_nfs_share after first install, so we
#   also not not bother cleaning up the mountpoint or symlinks.

- name: Mount NFS share
  when: bbb_nfs_share is defined
  block:
    - name: Install nfs-common
      become: true
      ansible.builtin.apt:
        name: nfs-common

    - name: Mount NFS share to {{ bbb_nfs_mount }}
      become: true
      ansible.posix.mount:
        path: "{{ bbb_nfs_mount }}"
        src: "{{ bbb_nfs_share }}"
        fstype: nfs
        opts: "{{ bbb_nfs_opts }}"
        state: mounted
      register: mounted

    - name: Create NFS share subdirectories
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ bbb_user_uid }}"
        group: "{{ bbb_group_gid }}"
        mode: "u=Xrw,g=Xr,o=Xr"
      loop:
        - "{{ [bbb_nfs_mount, 'var'] | path_join }}"
        - "{{ [bbb_nfs_mount, 'log'] | path_join }}"

    - name: Mark NFS share as ansible-managed
      become: true
      ansible.builtin.copy:
        dest: "{{ bbb_nfs_mount }}/.ansible-managed"
        content: "Ansible was here :)"
        mode: "u=rw,g=rw,o="

    - name: Define bbb_symlink_* point to NFS share
      ansible.builtin.set_fact:
        bbb_symlink_var: "{{ [bbb_nfs_mount, 'var'] | path_join }}"
        bbb_symlink_log: "{{ [bbb_nfs_mount, 'log'] | path_join }}"

- name: Ensure that bbb_symlink_* targets exist
  become: true
  ansible.builtin.stat:
    path: "{{ item.link_target }}"
  register: result
  failed_when: "not (result.stat.exists and result.stat.isdir)"
  when: "item.link_target"
  loop: &symlinks
    - path: "/var/bigbluebutton"
      link_target: "{{ bbb_symlink_var | default(False) }}"
    - path: "/var/log/bigbluebutton"
      link_target: "{{ bbb_symlink_log | default(False) }}"
  loop_control:
    label: "{{ item.link_target or item.path }}"

- name: Create symlinks for var and log directories
  become: true
  ansible.builtin.file:
    src: "{{ item.link_target }}"
    path: "{{ item.path }}"
    state: link #  This will fail if item.path is a non-empty directory
    follow: true
    owner: "{{ bbb_user_uid }}"
    group: "{{ bbb_group_gid }}"
    mode: "u=Xrw,g=Xr,o=Xr"
  when: "item.link_target"
  loop: *symlinks
  loop_control:
    label: "{{ item.path }} -> {{ item.link_target or '(skipped)' }}"

- name: Check for broken symlinks
  become: true
  ansible.builtin.stat:
    path: "{{ item.path }}"
    follow: true
  register: result
  failed_when: not result.stat.exists
  when: "item.link_target"
  loop: *symlinks
  loop_control:
    label: "{{ item.path }}"
